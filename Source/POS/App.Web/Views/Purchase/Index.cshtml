@*@model IEnumerable<App.Web.Mappers.PurchaseDTO>*@
@model PaginatedList<App.Web.Mappers.CustomerDTO>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create" class="btn btn-outline-primary">Add New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                PO Id
            </th>
            <th>
                Customer
            </th>
            @*<th>
                Items
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
            <td>
                @Html.DisplayFor(modelItem => item.BussinessName)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Orderitemssales.Count)
            </td>*@
        <td>
            <a asp-action="Create" asp-route-id="@item.Id" class="btn btn-outline-primary">Add More</a>
        </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-secondary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-secondary @nextDisabled">
    Next
</a>